package py.gov.asuncion.turnero.all.view;

import java.awt.Color;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import py.gov.asuncion.turnero.all.model.SocketDataSendModel;
import py.gov.asuncion.turnero.all.util.ReproductorUtil;
import py.gov.asuncion.turnero.all.data.dto.Param;
import py.gov.asuncion.turnero.all.data.jdbcRepository.ParamJdbcRepository;
import py.gov.asuncion.turnero.all.util.ConstantUtil;

public class Monitor extends javax.swing.JFrame implements Runnable {

    Integer cont, pos = 0;

    private String pathSonido;
    private String paramCodigo;

    public Monitor() {
        paramCodigo = ConstantUtil.CODIGO_PATHSONIDOLINUX;
        String sSistemaOperativo = System.getProperty("os.name");
        System.out.println(sSistemaOperativo);
        if (!sSistemaOperativo.equals(ConstantUtil.SOLINUX)) {
            paramCodigo = ConstantUtil.CODIGO_PATHSONIDOWIN;
        }
        ParamJdbcRepository paramJdbcRepository = new ParamJdbcRepository();
        Param param = paramJdbcRepository.getParamByGrupoAndCodigo(ConstantUtil.GRUPO_PATH, paramCodigo);
        if (param != null) {
            pathSonido = param.getValor();
            initComponents();
            Thread mihilo = new Thread(this);
            mihilo.start();
        } else {
            JOptionPane.showMessageDialog(null, "Hubo problemas para conectar con la base de datos", "Atención",
                    JOptionPane.INFORMATION_MESSAGE);
        }

    }

    public void borradoFilas1() { // Area texto listas de numeros llamados
        Integer end;
        try {
            if (pos > 6) {
                end = TextArea2.getLineEndOffset(0);
                TextArea2.replaceRange("", 0, end);
            }
        } catch (BadLocationException ex) {
            Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void borradoUltimoLlamado() { // Area texto listas de numeros llamados
        Integer end;
        try {
            if (pos > 0) {
                end = TextArea3.getLineEndOffset(0);
                TextArea3.replaceRange("", 0, end);

                end = TextArea5.getLineEndOffset(0);
                TextArea5.replaceRange("", 0, end);

                end = TextArea6.getLineEndOffset(0);
                TextArea6.replaceRange("", 0, end);
            }
        } catch (BadLocationException ex) {
            Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void colorNegro() {
        TextArea3.setForeground(Color.green);
        TextArea5.setForeground(Color.green);
        TextArea6.setForeground(Color.green);
        TextArea3.setBackground(Color.black);
        TextArea5.setBackground(Color.black);
        TextArea6.setBackground(Color.black);
        jPanel2.setBackground(Color.black);
    }

    public void colorRojo() {
        TextArea3.setForeground(Color.green);
        TextArea5.setForeground(Color.green);
        TextArea6.setForeground(Color.green);
        TextArea3.setBackground(Color.red);
        TextArea5.setBackground(Color.red);
        TextArea6.setBackground(Color.red);
        jPanel2.setBackground(Color.red);
    }

    private void cambiaColor() {
        TimerTask Task = new TimerTask() {
            Integer i = 1;

            @Override
            public void run() {
                if (i <= 6) {
                    if (i % 2 == 0) {
                        colorNegro();
                    } else {
                        colorRojo();
                    }
                }
                i++;
            }
        };
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(Task, 10, 2000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TextArea2 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        TextArea3 = new javax.swing.JTextArea();
        TextArea6 = new javax.swing.JTextArea();
        TextArea5 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 153, 102));
        setExtendedState(6);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setText("E INNOVACION TECNOLOGICA");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 240, -1));

        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setText("DIRECCION GENERAL DE PLANIFICACION ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 330, 14));

        jLabel8.setForeground(new java.awt.Color(0, 153, 0));
        jLabel8.setText("DIRECCION DE TIC's (TECNOLOGIA DE LA INFORMACION");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 460, -1));

        jLabel9.setForeground(new java.awt.Color(0, 153, 0));
        jLabel9.setText("Y COMUNICACIONES)");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 200, -1));

        jPanel4.setBackground(new java.awt.Color(10, 106, 41));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("TICKET N°    DEPENDENCIA                   ");

        TextArea2.setBackground(new java.awt.Color(10, 106, 41));
        TextArea2.setColumns(20);
        TextArea2.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        TextArea2.setForeground(new java.awt.Color(255, 255, 255));
        TextArea2.setRows(5);
        TextArea2.setWrapStyleWord(true);
        TextArea2.setAutoscrolls(false);
        TextArea2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, new java.awt.Color(204, 204, 204)));
        TextArea2.setMinimumSize(new java.awt.Dimension(0, 150));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        TextArea3.setBackground(new java.awt.Color(0, 0, 0));
        TextArea3.setColumns(20);
        TextArea3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        TextArea3.setForeground(new java.awt.Color(102, 255, 0));
        TextArea3.setRows(1);
        TextArea3.setAutoscrolls(false);
        TextArea3.setBorder(null);

        TextArea6.setBackground(new java.awt.Color(0, 0, 0));
        TextArea6.setColumns(20);
        TextArea6.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        TextArea6.setForeground(new java.awt.Color(102, 255, 0));
        TextArea6.setRows(1);
        TextArea6.setAutoscrolls(false);
        TextArea6.setBorder(null);

        TextArea5.setBackground(new java.awt.Color(0, 0, 0));
        TextArea5.setColumns(20);
        TextArea5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        TextArea5.setForeground(new java.awt.Color(102, 255, 0));
        TextArea5.setRows(1);
        TextArea5.setAutoscrolls(false);
        TextArea5.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextArea5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(TextArea3, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(TextArea6, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextArea3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextArea5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextArea6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ULTIMO LLAMADO");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("MUNCIPALIDAD DE ASUNCION BLOQUE \"A\"");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel2)
                .addGap(148, 148, 148)
                .addComponent(jLabel1))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(463, 463, 463)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(501, 501, 501)
                        .addComponent(jLabel12))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 985, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 990, 560));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo_tic.png"))); // NOI18N
        jLabel5.setText("jLabel3");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 200, 110));
        jLabel5.getAccessibleContext().setAccessibleName("");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo_horizontal_2.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 230, 100));

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
//        new LoggerUtil();

        /* Set the Nimbus look and fe     timer.schedule(Task,0, 2000);el */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Monitor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextArea2;
    private javax.swing.JTextArea TextArea3;
    private javax.swing.JTextArea TextArea5;
    private javax.swing.JTextArea TextArea6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

//Servidor 2
    @Override
    public void run() {
        int port = ConstantUtil.SERVER_PORT;
        ServerSocket server = null;
        Socket socket = null;

        try {
            //Se crea el ServerSocket
            server = new ServerSocket(port);
            System.out.println("Server is listening on port " + port);
            String nroOrden, nroTerminal, descripcionDependencia;
            String letra1;
            String letra2;
            String letra3;
            //Bucle infinito para esperar conexiones
            while (true) {
                socket = server.accept();
                System.out.println("Cliente con la IP: " + socket.getInetAddress().getHostName() + " conectado");
                InputStream input = socket.getInputStream();
                ObjectInputStream paquete = new ObjectInputStream(input);
                SocketDataSendModel paqueteRecibido = (SocketDataSendModel) paquete.readObject();
                System.out.println("SocketDataSendModel: " + paqueteRecibido.toString());
                nroOrden = paqueteRecibido.getNroOrden().toString();
                letra1 = paqueteRecibido.getLetra1().trim();
                letra2 = paqueteRecibido.getLetra2().trim();
                letra3 = paqueteRecibido.getLetra3();
                nroTerminal = paqueteRecibido.getNroTerminal().toString();
                descripcionDependencia = paqueteRecibido.getDescripcionDependencia().trim();

                if (Integer.valueOf(nroOrden) < 10) {
                    nroOrden = "0" + nroOrden;
                }

                TextArea2.append("\n" + " " + letra1 + letra2 + "-" + letra3 + nroOrden + " - " + descripcionDependencia + " - BOX" + nroTerminal);
                TextArea3.append("\n" + "TICKET  " + letra1 + letra2 + "-" + letra3 + nroOrden);
                TextArea5.append("\n" + descripcionDependencia);
                TextArea6.append("\n" + "BOX" + nroTerminal);
                cambiaColor();

                pos = pos + 1;
                borradoFilas1();
                borradoUltimoLlamado();
                ReproductorUtil reproductor = new ReproductorUtil();
                reproductor.play(pathSonido + "timbre1.wav");
                reproductor.play(pathSonido + "ticket.wav");
                reproductor.play(pathSonido + "letras/" + letra1.toLowerCase() + ".wav");
                reproductor.play(pathSonido + "letras/" + letra2.toLowerCase() + ".wav");
                reproductor.play(pathSonido + "letras/" + paqueteRecibido.getNombreArchivoLetra());
                reproductor.play(pathSonido + "numeros/" + paqueteRecibido.getNombreArchivoNroOrden());
                reproductor.play(pathSonido + "dependencias/" + paqueteRecibido.getNombreArchivoDescripcionDependencia());
                reproductor.play(pathSonido + "box.wav");
                reproductor.play(pathSonido + "numeros/" + paqueteRecibido.getNombreArchivoNroTerminal());
            }
        } catch (Exception ex) {
            Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                socket.close();
                server.close();
            } catch (Exception ex) {
                Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
